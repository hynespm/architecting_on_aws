{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Creates two VPCs, peers the VPCs, and launches an instance in each VPC.",
  "Parameters": {
    "EC2KeyPairName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair.",
      "Default": "aai"
    },
    "VPCIDCIDRRange": {
      "Description": "The IP address range for your new VPC.",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "10.1.0.0/16",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "PrivateVPCIDCIDRRange": {
      "Description": "The IP address range for your new Private VPC.",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "10.0.0.0/16",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "EC2SubnetCIDRRange": {
      "Description": "The IP address range for a subnet in myPrivateVPC.",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "10.0.0.0/24",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "EC2PublicSubnetCIDRRange": {
      "Description": "The IP address range for a subnet in VPC.",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "10.1.0.0/24",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },
  "Mappings": {
    "AWSRegionToAMI": {
      "us-east-1": {
        "64": "ami-0ff8a91507f77f867"
      },
      "us-west-2": {
        "64": "ami-a0cfeed8"
      },
      "us-west-1": {
        "64": "ami-0bdb828fd58c52235"
      },
      "eu-west-1": {
        "64": "ami-047bb4163c506cd98"
      },
      "ap-southeast-1": {
        "64": "ami-08569b978cc4dfa10"
      },
      "ap-southeast-2": {
        "64": "ami-09b42976632b27e9b"
      },
      "ap-northeast-2": {
        "64": "ami-0d097db2fb6e0f05e"
      },
      "ap-northeast-1": {
        "64": "ami-06cd52961ce9f0d85"
      },
      "sa-east-1": {
        "64": "ami-07b14488da8ea02a0"
      }
    }
  },
  "Resources": {
    "FlowLogRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "FlowLogRole",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/CloudWatchFullAccess"
        ],
        "Policies": [
          {
            "PolicyName": "root",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ]
            }
          }
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "vpc-flow-logs.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        }
      }
    },
    "PrivateFlowLog": {
      "Type": "AWS::EC2::FlowLog",
      "Properties": {
        "MaxAggregationInterval": 60,
        "DeliverLogsPermissionArn": {
          "Fn::GetAtt": [
            "FlowLogRole",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Ref": "PrivateFlowLogsGroup"
        },
        "ResourceId": {
          "Ref": "PrivateVPC"
        },
        "ResourceType": "VPC",
        "TrafficType": "ALL"
      }
    },
    "PublicFlowLog": {
      "Type": "AWS::EC2::FlowLog",
      "Properties": {
        "MaxAggregationInterval": 60,
        "DeliverLogsPermissionArn": {
          "Fn::GetAtt": [
            "FlowLogRole",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Ref": "PublicFlowLogsGroup"
        },
        "ResourceId": {
          "Ref": "VPC"
        },
        "ResourceType": "VPC",
        "TrafficType": "ALL"
      }
    },
    "PublicFlowLogsGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "PublicFlowLogGroup",
        "RetentionInDays": 1
      }
    },
    "PrivateFlowLogsGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "PrivateFlowLogGroup",
        "RetentionInDays": 1
      }
    },
    "PrivateNetworkAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "PrivateVPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PrivateNacl"
          }
        ]
      }
    },
    "InboundRule": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "PrivateNetworkAcl"
        },
        "RuleNumber": 100,
        "Protocol": 6,
        "RuleAction": "allow",
        "CidrBlock": "172.16.0.0/24",
        "PortRange": {
          "From": 22,
          "To": 22
        }
      }
    },
    "OutboundRule": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "PrivateNetworkAcl"
        },
        "RuleNumber": 100,
        "Protocol": -1,
        "Egress": true,
        "RuleAction": "allow",
        "CidrBlock": "0.0.0.0/0"
      }
    },
    "PrivateVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "VPC-Not-Working-B"
          }
        ],
        "CidrBlock": {
          "Ref": "PrivateVPCIDCIDRRange"
        },
        "EnableDnsSupport": false,
        "EnableDnsHostnames": false,
        "InstanceTenancy": "default"
      }
    },
    "PrivateEC2Subnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "PrivateVPC"
        },
        "CidrBlock": {
          "Ref": "EC2SubnetCIDRRange"
        }
      }
    },
    "RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "PrivateVPC"
        }
      }
    },
    "PeeringRoute1": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "RouteTable"
        },
        "VpcPeeringConnectionId": {
          "Ref": "VPCPeeringConnection"
        }
      }
    },
    "SubnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateEC2Subnet"
        },
        "RouteTableId": {
          "Ref": "RouteTable"
        }
      }
    },
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "VPC-Not-Working-A"
          }
        ],
        "CidrBlock": {
          "Ref": "VPCIDCIDRRange"
        },
        "EnableDnsSupport": true,
        "EnableDnsHostnames": true,
        "InstanceTenancy": "default"
      }
    },
    "PublicSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": {
          "Ref": "EC2PublicSubnetCIDRRange"
        },
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway"
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "PeeringRoute2": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": {
          "Ref": "PrivateVPCIDCIDRRange"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "VpcPeeringConnectionId": {
          "Ref": "VPCPeeringConnection"
        }
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "AttachGateway",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicSubnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    },
    "PrivateVPCEC2SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Private instance security group",
        "VpcId": {
          "Ref": "PrivateVPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 80,
            "ToPort": 80,
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "VPCEC2SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Public instance security group",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "PrivateInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "private-troubleshoot-instance"
          }
        ],
        "SecurityGroupIds": [
          {
            "Ref": "PrivateVPCEC2SecurityGroup"
          }
        ],
        "InstanceType": "t2.micro",
        "SubnetId": {
          "Ref": "PrivateEC2Subnet"
        },
        "KeyName": {
          "Ref": "EC2KeyPairName"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionToAMI",
            {
              "Ref": "AWS::Region"
            },
            "64"
          ]
        }
      }
    },
    "Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "public-troubleshoot-instance"
          }
        ],
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0",
            "GroupSet": [
              {
                "Ref": "VPCEC2SecurityGroup"
              }
            ],
            "SubnetId": {
              "Ref": "PublicSubnet"
            }
          }
        ],
        "InstanceType": "t2.micro",
        "KeyName": {
          "Ref": "EC2KeyPairName"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionToAMI",
            {
              "Ref": "AWS::Region"
            },
            "64"
          ]
        }
      }
    },
    "VPCPeeringConnection": {
      "Type": "AWS::EC2::VPCPeeringConnection",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "PeerVpcId": {
          "Ref": "PrivateVPC"
        }
      }
    }
  }
}
